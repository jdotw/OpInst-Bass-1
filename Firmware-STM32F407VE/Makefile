##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [3.14.1] date: [Sat Oct 23 11:17:07 AEDT 2021]
##########################################################################################################################


# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

######################################
# target
######################################
TARGET = Firmware-STM32F407VE


######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
OPT = -Og


#######################################
# paths
#######################################
# Build path
BUILD_DIR = build

######################################
# source
######################################
# C sources
C_SOURCES =  \
Core/Src/main.c \
Core/Src/custom_bus.c \
Core/Src/blink.c \
Core/Src/ctrl.c \
Core/Src/note.c \
Core/Src/commit/commit.c \
Core/Src/commit/commit_dac.c \
Core/Src/commit/commit_gatetrig.c \
Core/Src/commit/commit_led.c \
Core/Src/commit/commit_led_adsr.c \
Core/Src/commit/commit_led_button.c \
Core/Src/commit/commit_led_osc.c \
Core/Src/commit/commit_led_rotpic.c \
Core/Src/gpio/gpio.c \
Core/Src/hw/dac7678.c \
Core/Src/hw/elw2701aa.c \
Core/Src/hw/is32.c \
Core/Src/hw/pca9555.c \
Core/Src/hw/tca9544a.c \
Core/Src/i2c/i2c.c \
Core/Src/i2c/i2c_isr.c \
Core/Src/i2c/i2c_mux.c \
Core/Src/i2c/i2c_scan.c \
Core/Src/midi/midi.c \
Core/Src/midi/midi_cc.c \
Core/Src/midi/midi_channel_voice.c \
Core/Src/midi/midi_realtime.c \
Core/Src/midi/midi_rx.c \
Core/Src/mod/mod.c \
Core/Src/oled/oled.c \
Core/Src/oled/oled_commit.c \
Core/Src/oled/oled_preset.c \
Core/Src/osc/osc.c \
Core/Src/osc/osc_calibrate.c \
Core/Src/osc/osc_ctrl.c \
Core/Src/preset/preset.c \
Core/Src/rotpic/rotpic.c \
Core/Src/rotpic/rotpic_led.c \
Core/Src/sd/sd.c \
Core/Src/seq/seq.c \
Core/Src/seq/seq_poll.c \
Core/Src/stm32f4xx_it.c \
Core/Src/stm32f4xx_hal_msp.c \
cJSON/cJSON.c \
FATFS/App/fatfs.c \
FATFS/Target/bsp_driver_sd.c \
FATFS/Target/sd_diskio.c \
FATFS/Target/fatfs_platform.c \
BlueNRG_2/Target/hci_tl_interface.c \
BlueNRG_2/App/gatt_db.c \
BlueNRG_2/App/app_bluenrg_2.c \
Drivers/BSP/custom/custom.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_spi.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ramfunc.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_gpio.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma_ex.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr_ex.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_exti.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c_ex.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_ll_sdmmc.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sd.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim_ex.c \
Core/Src/system_stm32f4xx.c \
Middlewares/Third_Party/FatFs/src/diskio.c \
Middlewares/Third_Party/FatFs/src/ff.c \
Middlewares/Third_Party/FatFs/src/ff_gen_drv.c \
Middlewares/Third_Party/FatFs/src/option/syscall.c \
Middlewares/ST/BlueNRG-2/hci/hci_tl_patterns/Basic/hci_tl.c \
Middlewares/ST/BlueNRG-2/hci/bluenrg1_devConfig.c \
Middlewares/ST/BlueNRG-2/hci/bluenrg1_events.c \
Middlewares/ST/BlueNRG-2/hci/bluenrg1_events_cb.c \
Middlewares/ST/BlueNRG-2/hci/bluenrg1_hci_le.c \
Middlewares/ST/BlueNRG-2/utils/ble_list.c \
Middlewares/ST/BlueNRG-2/hci/controller/bluenrg1_gap_aci.c \
Middlewares/ST/BlueNRG-2/hci/controller/bluenrg1_gatt_aci.c \
Middlewares/ST/BlueNRG-2/hci/controller/bluenrg1_hal_aci.c \
Middlewares/ST/BlueNRG-2/hci/controller/bluenrg1_l2cap_aci.c  

# ASM sources
ASM_SOURCES =  \
startup_stm32f407xx.s


#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CC = $(GCC_PATH)/$(PREFIX)gcc
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
else
CC = $(PREFIX)gcc
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S
 
#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m4

# fpu
FPU = -mfpu=fpv4-sp-d16

# float-abi
FLOAT-ABI = -mfloat-abi=hard

# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
-DUSE_HAL_DRIVER \
-DSTM32F407xx


# AS includes
AS_INCLUDES = 

# C includes
C_INCLUDES =  \
-IFATFS/Target \
-IFATFS/App \
-IBlueNRG_2/App \
-IBlueNRG_2/Target \
-ICore/Inc \
-IDrivers/BSP/custom \
-IDrivers/STM32F4xx_HAL_Driver/Inc \
-IDrivers/STM32F4xx_HAL_Driver/Inc/Legacy \
-IMiddlewares/Third_Party/FatFs/src \
-IDrivers/CMSIS/Device/ST/STM32F4xx/Include \
-IDrivers/CMSIS/Include \
-IMiddlewares/ST/BlueNRG-2/hci/hci_tl_patterns/Basic \
-IMiddlewares/ST/BlueNRG-2/utils \
-IMiddlewares/ST/BlueNRG-2/includes


# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS = $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
endif


# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"


#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = STM32F407VETx_FLASH.ld

# libraries
LIBS = -lc -lm -lnosys 
LIBDIR = 
LDFLAGS = $(MCU) -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections -Wl,--print-memory-usage

# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin



######################################
# LVGL
######################################
LVGL_DIR = lvgl
CFLAGS += -Ilvgl
CFLAGS += -DLV_LVGL_H_INCLUDE_SIMPLE=1
include $(LVGL_DIR)/lvgl.mk
C_SOURCES += $(CSRCS)

#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@
	
$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@	
	
$(BUILD_DIR):
	mkdir $@		

#######################################
# clean up
#######################################
clean:
	-rm -fR $(BUILD_DIR)
  
#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

# *** EOF ***
