##########################################################################################################################
# File automatically-generated by STM32forVSCode
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

######################################
# target
######################################
TARGET = Firmware-STM32F407VE


######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
OPT = -Og


#######################################
# paths
#######################################
# Build path
BUILD_DIR = build

######################################
# source
######################################
# C sources
C_SOURCES =  \
BlueNRG_2/App/app_bluenrg_2.c \
BlueNRG_2/App/gatt_db.c \
BlueNRG_2/Target/hci_tl_interface.c \
Core/Src/adsr/adsr.c \
Core/Src/adsr/adsr_led.c \
Core/Src/blink.c \
Core/Src/button/button_led.c \
Core/Src/commit/commit.c \
Core/Src/ctrl/ctrl.c \
Core/Src/ctrl/ctrl_apply.c \
Core/Src/ctrl/ctrl_name.c \
Core/Src/ctrl/ctrl_screen.c \
Core/Src/ctrl/ctrl_screen_changed.c \
Core/Src/ctrl/ctrl_value.c \
Core/Src/custom_bus.c \
Core/Src/gpio/gpio.c \
Core/Src/hw/dac7678.c \
Core/Src/hw/elw2701aa.c \
Core/Src/hw/is32.c \
Core/Src/hw/pca9555.c \
Core/Src/i2c/i2c.c \
Core/Src/i2c/i2c_isr.c \
Core/Src/i2c/i2c_resume.c \
Core/Src/i2c/i2c_resume_left.c \
Core/Src/i2c/i2c_resume_right.c \
Core/Src/i2c/i2c_scan.c \
Core/Src/main.c \
Core/Src/midi/midi.c \
Core/Src/midi/midi_cc.c \
Core/Src/midi/midi_channel_voice.c \
Core/Src/midi/midi_realtime.c \
Core/Src/midi/midi_rx.c \
Core/Src/mod/mod.c \
Core/Src/mod/mod_led.c \
Core/Src/note.c \
Core/Src/oled/oled.c \
Core/Src/oled/oled_commit.c \
Core/Src/oled/oled_theme.c \
Core/Src/osc/osc.c \
Core/Src/osc/osc_calibrate.c \
Core/Src/osc/osc_ctrl.c \
Core/Src/param/param.c \
Core/Src/preset/preset.c \
Core/Src/preset/preset_catalog.c \
Core/Src/preset/preset_ctrl_name.c \
Core/Src/preset/preset_load.c \
Core/Src/preset/preset_save.c \
Core/Src/preset/preset_screen.c \
Core/Src/preset/preset_screen_select.c \
Core/Src/preset/preset_screen_set_name.c \
Core/Src/rgb/rgb_amp_lab.c \
Core/Src/rgb/rgb_convert.c \
Core/Src/rgb/rgb_drive_lab.c \
Core/Src/rgb/rgb_filt_lab.c \
Core/Src/rgb/rgb_fx_lab.c \
Core/Src/rgb/rgb_interpolate.c \
Core/Src/rgb/rgb_lab.c \
Core/Src/rgb/rgb_led.c \
Core/Src/rgb/rgb_osc1_lab.c \
Core/Src/rgb/rgb_osc2_lab.c \
Core/Src/rgb/rgb_sub_lab.c \
Core/Src/rotpic/rotpic.c \
Core/Src/rotpic/rotpic_led.c \
Core/Src/sd/sd.c \
Core/Src/seq/seq.c \
Core/Src/seq/seq_led.c \
Core/Src/seq/seq_poll.c \
Core/Src/stm32f4xx_hal_msp.c \
Core/Src/stm32f4xx_it.c \
Core/Src/syscalls.c \
Core/Src/sysmem.c \
Core/Src/system_stm32f4xx.c \
Drivers/BSP/custom/custom.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma_ex.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_exti.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ramfunc.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_gpio.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c_ex.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr_ex.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sd.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_spi.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim_ex.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c \
Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_ll_sdmmc.c \
FATFS/App/fatfs.c \
FATFS/Target/bsp_driver_sd.c \
FATFS/Target/fatfs_platform.c \
FATFS/Target/sd_diskio.c \
Middlewares/ST/BlueNRG-2/hci/bluenrg1_devConfig.c \
Middlewares/ST/BlueNRG-2/hci/bluenrg1_events.c \
Middlewares/ST/BlueNRG-2/hci/bluenrg1_events_cb.c \
Middlewares/ST/BlueNRG-2/hci/bluenrg1_hci_le.c \
Middlewares/ST/BlueNRG-2/hci/controller/bluenrg1_gap_aci.c \
Middlewares/ST/BlueNRG-2/hci/controller/bluenrg1_gatt_aci.c \
Middlewares/ST/BlueNRG-2/hci/controller/bluenrg1_hal_aci.c \
Middlewares/ST/BlueNRG-2/hci/controller/bluenrg1_l2cap_aci.c \
Middlewares/ST/BlueNRG-2/hci/hci_tl_patterns/Basic/hci_tl.c \
Middlewares/ST/BlueNRG-2/utils/ble_list.c \
Middlewares/Third_Party/FatFs/src/diskio.c \
Middlewares/Third_Party/FatFs/src/ff.c \
Middlewares/Third_Party/FatFs/src/ff_gen_drv.c \
Middlewares/Third_Party/FatFs/src/option/syscall.c \
cJSON/cJSON.c \
lvgl/src/core/lv_disp.c \
lvgl/src/core/lv_event.c \
lvgl/src/core/lv_group.c \
lvgl/src/core/lv_indev.c \
lvgl/src/core/lv_indev_scroll.c \
lvgl/src/core/lv_obj.c \
lvgl/src/core/lv_obj_class.c \
lvgl/src/core/lv_obj_draw.c \
lvgl/src/core/lv_obj_pos.c \
lvgl/src/core/lv_obj_scroll.c \
lvgl/src/core/lv_obj_style.c \
lvgl/src/core/lv_obj_style_gen.c \
lvgl/src/core/lv_obj_tree.c \
lvgl/src/core/lv_refr.c \
lvgl/src/core/lv_theme.c \
lvgl/src/draw/lv_draw_arc.c \
lvgl/src/draw/lv_draw_blend.c \
lvgl/src/draw/lv_draw_img.c \
lvgl/src/draw/lv_draw_label.c \
lvgl/src/draw/lv_draw_line.c \
lvgl/src/draw/lv_draw_mask.c \
lvgl/src/draw/lv_draw_rect.c \
lvgl/src/draw/lv_draw_triangle.c \
lvgl/src/draw/lv_img_buf.c \
lvgl/src/draw/lv_img_cache.c \
lvgl/src/draw/lv_img_decoder.c \
lvgl/src/extra/layouts/flex/lv_flex.c \
lvgl/src/extra/layouts/grid/lv_grid.c \
lvgl/src/extra/lv_extra.c \
lvgl/src/extra/themes/basic/lv_theme_basic.c \
lvgl/src/extra/themes/default/lv_theme_default.c \
lvgl/src/extra/themes/mono/lv_theme_mono.c \
lvgl/src/extra/widgets/animimg/lv_animimg.c \
lvgl/src/extra/widgets/calendar/lv_calendar.c \
lvgl/src/extra/widgets/calendar/lv_calendar_header_arrow.c \
lvgl/src/extra/widgets/calendar/lv_calendar_header_dropdown.c \
lvgl/src/extra/widgets/chart/lv_chart.c \
lvgl/src/extra/widgets/colorwheel/lv_colorwheel.c \
lvgl/src/extra/widgets/imgbtn/lv_imgbtn.c \
lvgl/src/extra/widgets/keyboard/lv_keyboard.c \
lvgl/src/extra/widgets/led/lv_led.c \
lvgl/src/extra/widgets/list/lv_list.c \
lvgl/src/extra/widgets/meter/lv_meter.c \
lvgl/src/extra/widgets/msgbox/lv_msgbox.c \
lvgl/src/extra/widgets/span/lv_span.c \
lvgl/src/extra/widgets/spinbox/lv_spinbox.c \
lvgl/src/extra/widgets/spinner/lv_spinner.c \
lvgl/src/extra/widgets/tabview/lv_tabview.c \
lvgl/src/extra/widgets/tileview/lv_tileview.c \
lvgl/src/extra/widgets/win/lv_win.c \
lvgl/src/font/lv_font.c \
lvgl/src/font/lv_font_dejavu_16_persian_hebrew.c \
lvgl/src/font/lv_font_fmt_txt.c \
lvgl/src/font/lv_font_loader.c \
lvgl/src/font/lv_font_montserrat_10.c \
lvgl/src/font/lv_font_montserrat_12.c \
lvgl/src/font/lv_font_montserrat_12_subpx.c \
lvgl/src/font/lv_font_montserrat_14.c \
lvgl/src/font/lv_font_montserrat_16.c \
lvgl/src/font/lv_font_montserrat_18.c \
lvgl/src/font/lv_font_montserrat_20.c \
lvgl/src/font/lv_font_montserrat_22.c \
lvgl/src/font/lv_font_montserrat_24.c \
lvgl/src/font/lv_font_montserrat_26.c \
lvgl/src/font/lv_font_montserrat_28.c \
lvgl/src/font/lv_font_montserrat_28_compressed.c \
lvgl/src/font/lv_font_montserrat_30.c \
lvgl/src/font/lv_font_montserrat_32.c \
lvgl/src/font/lv_font_montserrat_34.c \
lvgl/src/font/lv_font_montserrat_36.c \
lvgl/src/font/lv_font_montserrat_38.c \
lvgl/src/font/lv_font_montserrat_40.c \
lvgl/src/font/lv_font_montserrat_42.c \
lvgl/src/font/lv_font_montserrat_44.c \
lvgl/src/font/lv_font_montserrat_46.c \
lvgl/src/font/lv_font_montserrat_48.c \
lvgl/src/font/lv_font_montserrat_8.c \
lvgl/src/font/lv_font_simsun_16_cjk.c \
lvgl/src/font/lv_font_unscii_16.c \
lvgl/src/font/lv_font_unscii_8.c \
lvgl/src/gpu/lv_gpu_nxp_pxp.c \
lvgl/src/gpu/lv_gpu_nxp_pxp_osa.c \
lvgl/src/gpu/lv_gpu_nxp_vglite.c \
lvgl/src/gpu/lv_gpu_stm32_dma2d.c \
lvgl/src/hal/lv_hal_disp.c \
lvgl/src/hal/lv_hal_indev.c \
lvgl/src/hal/lv_hal_tick.c \
lvgl/src/misc/lv_anim.c \
lvgl/src/misc/lv_area.c \
lvgl/src/misc/lv_async.c \
lvgl/src/misc/lv_bidi.c \
lvgl/src/misc/lv_color.c \
lvgl/src/misc/lv_fs.c \
lvgl/src/misc/lv_gc.c \
lvgl/src/misc/lv_ll.c \
lvgl/src/misc/lv_log.c \
lvgl/src/misc/lv_math.c \
lvgl/src/misc/lv_mem.c \
lvgl/src/misc/lv_printf.c \
lvgl/src/misc/lv_style.c \
lvgl/src/misc/lv_style_gen.c \
lvgl/src/misc/lv_templ.c \
lvgl/src/misc/lv_timer.c \
lvgl/src/misc/lv_tlsf.c \
lvgl/src/misc/lv_txt.c \
lvgl/src/misc/lv_txt_ap.c \
lvgl/src/misc/lv_utils.c \
lvgl/src/widgets/lv_arc.c \
lvgl/src/widgets/lv_bar.c \
lvgl/src/widgets/lv_btn.c \
lvgl/src/widgets/lv_btnmatrix.c \
lvgl/src/widgets/lv_canvas.c \
lvgl/src/widgets/lv_checkbox.c \
lvgl/src/widgets/lv_dropdown.c \
lvgl/src/widgets/lv_img.c \
lvgl/src/widgets/lv_label.c \
lvgl/src/widgets/lv_line.c \
lvgl/src/widgets/lv_objx_templ.c \
lvgl/src/widgets/lv_roller.c \
lvgl/src/widgets/lv_slider.c \
lvgl/src/widgets/lv_switch.c \
lvgl/src/widgets/lv_table.c \
lvgl/src/widgets/lv_textarea.c


CPP_SOURCES = \


# ASM sources
ASM_SOURCES =  \
startup_stm32f407xx.s



#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
POSTFIX = "
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
GCC_PATH="/Applications/ARM/bin
ifdef GCC_PATH
CXX = $(GCC_PATH)/$(PREFIX)g++$(POSTFIX)
CC = $(GCC_PATH)/$(PREFIX)gcc$(POSTFIX)
AS = $(GCC_PATH)/$(PREFIX)gcc$(POSTFIX) -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy$(POSTFIX)
SZ = $(GCC_PATH)/$(PREFIX)size$(POSTFIX)
else
CXX = $(PREFIX)g++
CC = $(PREFIX)gcc
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S

#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m4

# fpu
FPU = -mfpu=fpv4-sp-d16

# float-abi
FLOAT-ABI = -mfloat-abi=hard

# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
-DSTM32F407xx \
-DUSE_HAL_DRIVER


# CXX defines
CXX_DEFS =  \
-DSTM32F407xx \
-DUSE_HAL_DRIVER


# AS includes
AS_INCLUDES = \

# C includes
C_INCLUDES =  \
-IBlueNRG_2/App \
-IBlueNRG_2/Target \
-ICore/Inc \
-IDrivers/BSP/custom \
-IDrivers/CMSIS/Device/ST/STM32F4xx/Include \
-IDrivers/CMSIS/Include \
-IDrivers/STM32F4xx_HAL_Driver/Inc \
-IDrivers/STM32F4xx_HAL_Driver/Inc/Legacy \
-IFATFS/App \
-IFATFS/Target \
-IMiddlewares/ST/BlueNRG-2/hci/hci_tl_patterns/Basic \
-IMiddlewares/ST/BlueNRG-2/includes \
-IMiddlewares/ST/BlueNRG-2/utils \
-IMiddlewares/Third_Party/FatFs/src \
-Ilvgl/src \
-Ilvgl/src/core \
-Ilvgl/src/draw \
-Ilvgl/src/extra \
-Ilvgl/src/extra/layouts \
-Ilvgl/src/extra/layouts/flex \
-Ilvgl/src/extra/layouts/grid \
-Ilvgl/src/extra/themes \
-Ilvgl/src/extra/themes/basic \
-Ilvgl/src/extra/themes/default \
-Ilvgl/src/extra/themes/mono \
-Ilvgl/src/extra/widgets \
-Ilvgl/src/extra/widgets/animimg \
-Ilvgl/src/extra/widgets/calendar \
-Ilvgl/src/extra/widgets/chart \
-Ilvgl/src/extra/widgets/colorwheel \
-Ilvgl/src/extra/widgets/imgbtn \
-Ilvgl/src/extra/widgets/keyboard \
-Ilvgl/src/extra/widgets/led \
-Ilvgl/src/extra/widgets/list \
-Ilvgl/src/extra/widgets/meter \
-Ilvgl/src/extra/widgets/msgbox \
-Ilvgl/src/extra/widgets/span \
-Ilvgl/src/extra/widgets/spinbox \
-Ilvgl/src/extra/widgets/spinner \
-Ilvgl/src/extra/widgets/tabview \
-Ilvgl/src/extra/widgets/tileview \
-Ilvgl/src/extra/widgets/win \
-Ilvgl/src/font \
-Ilvgl/src/gpu \
-Ilvgl/src/hal \
-Ilvgl/src/misc \
-Ilvgl/src/widgets



# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS = $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CXXFLAGS = $(MCU) $(CXX_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections -feliminate-unused-debug-types

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf -ggdb
CXXFLAGS += -g -gdwarf -ggdb
endif

# Add additional flags
CFLAGS += 
ASFLAGS += -specs=nosys.specs 
CXXFLAGS += 

# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"
CXXFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"

#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = STM32F407VETx_FLASH.ld

# libraries
LIBS = -lc -lm -lnosys 
LIBDIR = \


# Additional LD Flags from config file
ADDITIONALLDFLAGS = -specs=nano.specs 

LDFLAGS = $(MCU) $(ADDITIONALLDFLAGS) -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections

# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin


#######################################
# build the application
#######################################
# list of cpp program objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(CPP_SOURCES:.cpp=.o)))
vpath %.cpp $(sort $(dir $(CPP_SOURCES)))

# list of C objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))

$(BUILD_DIR)/%.o: %.cpp STM32Make.make | $(BUILD_DIR) 
	$(CXX) -c $(CXXFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.cpp=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.cxx STM32Make.make | $(BUILD_DIR) 
	$(CXX) -c $(CXXFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.cxx=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.c STM32Make.make | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s STM32Make.make | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) STM32Make.make
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@

$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@

$(BUILD_DIR):
	mkdir $@

#######################################
# flash
#######################################
flash: $(BUILD_DIR)/$(TARGET).elf
	"/opt/homebrew/bin/openocd" -f ./openocd.cfg -c "program $(BUILD_DIR)/$(TARGET).elf verify reset exit"

#######################################
# erase
#######################################
erase: $(BUILD_DIR)/$(TARGET).elf
	"/opt/homebrew/bin/openocd" -f ./openocd.cfg -c "init; reset halt; stm32f4x mass_erase 0; exit"

#######################################
# clean up
#######################################
clean:
	-rm -fR $(BUILD_DIR)

#######################################
# custom makefile rules
#######################################


	
#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

# *** EOF ***